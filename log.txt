=================================================================
==4323==ERROR: AddressSanitizer: heap-use-after-free on address 0x60300002cb00 at pc 0x000000438284 bp 0x7ffe436e81d0 sp 0x7ffe436e7990
READ of size 7 at 0x60300002cb00 thread T0
    #0 0x438283 in memcpy (/home/kirwa/Desktop/domains_management/domains+0x438283)
    #1 0x4dd32e in void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/basic_string.tcc:225:6
    #2 0x4d3ac2 in Domain::get_name[abi:cxx11]() /home/kirwa/Desktop/domains_management/Domain.cpp:22:58
    #3 0x4e6865 in DomainsMenu::press_delete_domain(sql::Statement*) /home/kirwa/Desktop/domains_management/DomainsMenu.cpp:142:74
    #4 0x4e659f in DomainsMenu::get_pressed_key(int, sql::Statement*) /home/kirwa/Desktop/domains_management/DomainsMenu.cpp:129:10
    #5 0x4ceb8a in main /home/kirwa/Desktop/domains_management/main.cpp:64:42
    #6 0x7fccb8b60d09 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x26d09)
    #7 0x4219b9 in _start (/home/kirwa/Desktop/domains_management/domains+0x4219b9)

0x60300002cb00 is located 0 bytes inside of 31-byte region [0x60300002cb00,0x60300002cb1f)
freed by thread T0 here:
    #0 0x4cbf2d in operator delete(void*) (/home/kirwa/Desktop/domains_management/domains+0x4cbf2d)
    #1 0x4db5c2 in Domain::~Domain() /home/kirwa/Desktop/domains_management/Domain.cpp:205:20
    #2 0x4e07a8 in void __gnu_cxx::new_allocator<Domain>::destroy<Domain>(Domain*) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/ext/new_allocator.h:156:10
    #3 0x4e030f in void std::allocator_traits<std::allocator<Domain> >::destroy<Domain>(std::allocator<Domain>&, Domain*) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/alloc_traits.h:531:8
    #4 0x4e783e in std::vector<Domain, std::allocator<Domain> >::_M_erase(__gnu_cxx::__normal_iterator<Domain*, std::vector<Domain, std::allocator<Domain> > >) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/vector.tcc:177:7
    #5 0x4e7058 in std::vector<Domain, std::allocator<Domain> >::erase(__gnu_cxx::__normal_iterator<Domain const*, std::vector<Domain, std::allocator<Domain> > >) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/stl_vector.h:1431:16
    #6 0x4e6aaf in DomainsMenu::press_delete_domain(sql::Statement*) /home/kirwa/Desktop/domains_management/DomainsMenu.cpp:143:10
    #7 0x4e659f in DomainsMenu::get_pressed_key(int, sql::Statement*) /home/kirwa/Desktop/domains_management/DomainsMenu.cpp:129:10
    #8 0x4ceb8a in main /home/kirwa/Desktop/domains_management/main.cpp:64:42
    #9 0x7fccb8b60d09 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x26d09)

previously allocated by thread T0 here:
    #0 0x4cb6cd in operator new(unsigned long) (/home/kirwa/Desktop/domains_management/domains+0x4cb6cd)
    #1 0x7fccb8fc57b1 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (/lib/x86_64-linux-gnu/libstdc++.so.6+0x1337b1)

SUMMARY: AddressSanitizer: heap-use-after-free (/home/kirwa/Desktop/domains_management/domains+0x438283) in memcpy
Shadow bytes around the buggy address:
  0x0c067fffd910: fa fa fd fd fd fa fa fa fd fd fd fa fa fa fd fd
  0x0c067fffd920: fd fa fa fa fd fd fd fd fa fa fd fd fd fa fa fa
  0x0c067fffd930: fd fd fd fa fa fa fd fd fd fa fa fa fd fd fd fd
  0x0c067fffd940: fa fa fd fd fd fa fa fa fd fd fd fa fa fa fd fd
  0x0c067fffd950: fd fd fa fa fd fd fd fa fa fa fd fd fd fa fa fa
=>0x0c067fffd960:[fd]fd fd fd fa fa fd fd fd fa fa fa fd fd fd fa
  0x0c067fffd970: fa fa fd fd fd fa fa fa fd fd fd fa fa fa fd fd
  0x0c067fffd980: fd fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c067fffd990: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c067fffd9a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c067fffd9b0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==4323==ABORTING
